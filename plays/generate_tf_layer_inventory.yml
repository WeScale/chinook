---
- name: "{{ tflayer }} - checking for var file to generate inventory"
  stat:
    path: "{{ src_layer_dir }}/inventory-map.yml"
  register: inventory_map

- name: variable rebranding
  set_fact:
    clean_tflayer: "{{ tflayer|regex_replace('^[0-9]{2,3}-', '') }}"

- name: "{{ tflayer }} - including terraform layer var file"
  include_vars:
    file: "{{ src_layer_dir }}/inventory-map.yml"

- name: "{{ tflayer }} - getting raw terraform outputs"
  shell: >-
    terraform output -json
    -state={{ target_layer_dir }}/{{ deployment }}.tfstate
  register: raw_tf_outputs

- name: "{{ tflayer }} - parsing terraform outputs"
  set_fact:
    tf_outputs: "{{ raw_tf_outputs.stdout|from_json }}"

- name: "{{ tflayer }} - generating ansible host inventory"
  template:
    src: "{{ inventory_dir }}/../plays/templates/terraform_layer_inventory.j2"
    dest: "{{ inventory_dir }}/{{ clean_tflayer }}.inventory"

- name: "{{ tflayer }} - generating ssh project configuration"
  template:
    src: "{{ inventory_dir }}/../plays/templates/ssh.cfg.j2"
    dest: "{{ inventory_dir }}/../ssh.cfg"
  when: tfoutput_cidr_to_tfoutput_bastion is defined
